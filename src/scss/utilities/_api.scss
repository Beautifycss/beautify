// Utility generator
// Used to generate utilities & print utilities

@mixin media($name, $breakpoint) {
  @if $name != "" {
    @media (min-width: #{$breakpoint}) { @content; }
  }
  @else {
    @content;
  }
}

@mixin generate-utility($utility, $infix) {
  $includes: map-get($utility, includes);
  $keys: map-get($utility, keys);
  $class: map-get($utility, class);
  $class: if($class, $class, "");
  $class: if($class!="" and $infix!="", "-" + $class, $class);
  $is-rtl: map-get($utility, rtl);
  $states: if(map-has-key($utility, states), map-get($utility, states), map-remove((x:x), x));

    $index: 0;
  @each $key in $keys {
    $key: if($key, $key, "");
    $key: if($class!="" or $infix!="", "-"+$key, $key);
      $index: $index+1;

    @if $is-rtl == false {
      /* rtl:begin:remove */
    }
    
    .#{$infix + $class + $key} {
      @each $property, $value in $includes {
        #{$property}: nth($value, $index);
      }
    }

      @each $state, $m in $states {
        .#{nth($m, 1) + $infix + $state + $class + $key+nth($m, 2)} {
          @each $property, $value in $includes {
        #{$property}: nth($value, $index);
          }
        }
      }
    @if $is-rtl == false {
      /* rtl:end:remove */
    }
  }
}

@each $name, $breakpoint in $breakpoints{
  @include media($name, $breakpoint){
    @each $key, $utility in $utilities {
      @include generate-utility($utility, $name);
    }
  }
}
